# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: serverless
# app and org for use with dashboard.serverless.com
app: vehicle-ingestion
org: matt3r

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9

# you can overwrite defaults here
#  stage: dev
  region: us-west-2
# you can define service wide environment variables here
#  environment:

# you can add packaging information here
#package:

functions:
  canserver-parquet-converter:
    handler: parse_canserver_log.lambda_handler
    timeout: 180
    memorySize: 512
    environment:
      LANDING_BUCKET: matt3r-canserver-us-west-2
      TZ: UTC
    role: 'arn:aws:iam::963414178352:role/haoming-lambda-parquet-test-role'
    events:
      - s3:
          bucket: matt3r-canserver-raw-us-west-2
          event: s3:ObjectCreated:*
          existing: true
          forceDeploy: true
    layers:
      - 'arn:aws:lambda:us-west-2:336392948345:layer:AWSSDKPandas-Python39:1'

  infer-aautopilot-states:
    handler: infer_autopilot_states.lambda_handler
    timeout: 180
    memorySize: 256
    environment:
      RAW_BUCKET: matt3r-canserver-us-west-2
      LANDING_BUCKET: matt3r-canserver-event-us-west-2
      TZ: UTC
    role: 'arn:aws:iam::963414178352:role/haoming-lambda-parquet-test-role'
    events:
      - sqs: arn:aws:sqs:us-west-2:963414178352:infer_DMD_autopilot
    layers:
      - 'arn:aws:lambda:us-west-2:336392948345:layer:AWSSDKPandas-Python39:1'

# you can add CloudFormation resource templates here
resources:
 Resources:
   infer_DMD_autopilot:
     Type: AWS::SQS::Queue

   haoming-dpl-sns:
     Type: AWS::SNS::Topic
     Properties:
       Subsription:
         - Protocol: sqs
           Endpoint: arn:aws:sqs:us-west-2:963414178352:infer_DMD_autopilot

   SnsToSqsPolicy:
     Type: AWS::SQS::QueuePolicy
     Properties:
       PolicyDocument:
         Version: "2012-10-17"
         Statement:
           - Sid: "Allow SNS publish to SQS"
             Effect: Allow
             Principal:
               Service: "sns.amazonaws.com"
             Resource: !GetAtt infer_DMD_autopilot.Arn
             Action: SQS:SendMessage
             Condition:
               ArnEquals:
                 aws:SourceArn: !Ref haoming-dpl-sns
       Queues:
         - Ref: infer_DMD_autopilot

